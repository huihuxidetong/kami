<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BankMapper">
	<resultMap id="BaseResultMap" type="com.card.inteface.entity.Bank">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
		<result column="bank_logo" property="bankLogo" jdbcType="VARCHAR" />
		<result column="bank_contacts_name" property="bankContactsName" jdbcType="VARCHAR" />
		<result column="bank_contacts_tel" property="bankContactsTel" jdbcType="VARCHAR" />
		<result column="bank_contacts_notic" property="bankContactsNotic" jdbcType="VARCHAR" />
		<result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="BankVo" type="com.card.inteface.vo.BankVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
		<result column="bank_logo" property="bankLogo" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id,
		bank_name,
		bank_logo,
		bank_contacts_name,
		bank_contacts_tel,
		bank_contacts_notic,
		create_user_id,
		create_time,
		update_user_id,
		update_time,
		status
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from bank
		<trim prefix="WHERE" prefixOverrides="AND|OR">
		id = #{id,jdbcType=INTEGER}
		</trim>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from bank
		<trim prefix="WHERE" prefixOverrides="AND|OR">
		id = #{id,jdbcType=INTEGER}
		</trim>
	</delete>
	
	<insert id="insertSelective" parameterType="com.card.inteface.entity.Bank">
		insert into bank
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null != id">
				id,
			</if>
			<if test="null != bankName">
				bank_name,
			</if>
			<if test="null != bankLogo">
				bank_logo,
			</if>
			<if test="null != bankContactsName">
				bank_contacts_name,
			</if>
			<if test="null != bankContactsTel">
				bank_contacts_tel,
			</if>
			<if test="null != bankContactsNotic">
				bank_contacts_notic,
			</if>
			<if test="null != createUserId">
				create_user_id,
			</if>
			<if test="null != createTime">
				create_time,
			</if>
			<if test="null != updateUserId">
				update_user_id,
			</if>
			<if test="null != updateTime">
				update_time,
			</if>
			<if test="null != status">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="null != id">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="null != bankName">
				#{bankName,jdbcType=VARCHAR},
			</if>
			<if test="null != bankLogo">
				#{bankLogo,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsName">
				#{bankContactsName,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsTel">
				#{bankContactsTel,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsNotic">
				#{bankContactsNotic,jdbcType=VARCHAR},
			</if>
			<if test="null != createUserId">
				#{createUserId,jdbcType=INTEGER},
			</if>
			<if test="null != createTime">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="null != updateUserId">
				#{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="null != updateTime">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="null != status">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.card.inteface.entity.Bank">
		update bank
		<set>
			<if test="null != id">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="null != bankName">
				bank_name = #{bankName,jdbcType=VARCHAR},
			</if>
			<if test="null != bankLogo">
				bank_logo = #{bankLogo,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsName">
				bank_contacts_name = #{bankContactsName,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsTel">
				bank_contacts_tel = #{bankContactsTel,jdbcType=VARCHAR},
			</if>
			<if test="null != bankContactsNotic">
				bank_contacts_notic = #{bankContactsNotic,jdbcType=VARCHAR},
			</if>
			<if test="null != createUserId">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
			<if test="null != createTime">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="null != updateUserId">
				update_user_id = #{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="null != updateTime">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="null != status">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
		id = #{id,jdbcType=INTEGER}
		</trim>
	</update>

	<select id="findBankVoListForCreditCradList" resultMap="BankVo">
		SELECT b.id,b.bank_name,b.bank_logo FROM credit_card_info cci
		LEFT JOIN bank b ON cci.bank_id = b.id
		WHERE cci.status =1
		GROUP BY b.id
	</select>

	<select id="findBankVoList" resultMap="BankVo">
		SELECT b.id,b.bank_name,b.bank_logo FROM bank b
	</select>
</mapper>